{"version":3,"sources":["Select.js","Buttons.js","GoodsList.js","App.js","index.js"],"names":["Select","state","value","_this","props","selectedValue","_this2","this","_this$props","maxValue","filteredLength","OnItemMinLength","options","Array","fill","react_default","a","createElement","onSubmit","event","preventDefault","className","htmlFor","onChange","setState","target","id","map","option","i","key","Math","random","type","React","Component","defaultProps","Buttons","isShown","OnItemfilteredLength","onItemReset","onItemSelected","onItemReversed","onItemSortedAlpha","onItemSortedLength","maxLength","selectedLength","Fragment","onClick","src_Select","GoodsList","goods","Object","toConsumableArray","maxLegnthOfGoods","max","apply","good","length","selectedMinLength","showHandler","prevState","reverseHandler","reverse","sortAlphaHandler","sort","resetHandler","sortLengthHandler","b","filterLengthHandler","filter","minLengthHandler","_this$state","src_Buttons","goodsFromServer","App","src_GoodsList","ReactDOM","render","src_App","test","document","getElementById"],"mappings":"mMAIMA,6MACJC,MAAQ,CAAEC,MAAOC,EAAKC,MAAMC,uFAEnB,IAAAC,EAAAC,KAAAC,EAC+CD,KAAKH,MAAnDK,EADDD,EACCC,SAAUC,EADXF,EACWE,eAAgBC,EAD3BH,EAC2BG,gBAE5BC,EAAUC,MAAMJ,GAAUK,KAAK,IAC7BZ,EAAUK,KAAKN,MAAfC,MAYR,OACEa,EAAAC,EAAAC,cAAA,QACEC,SARiB,SAACC,GACpBR,EAAgBT,GAChBQ,IACAS,EAAMC,kBAMJC,UAAU,mBAEVN,EAAAC,EAAAC,cAAA,SAAOK,QAAQ,qBAAf,8BAEEP,EAAAC,EAAAC,cAAA,UACEf,MAAOA,EACPqB,SAnBa,SAACJ,GACpBb,EAAKkB,SAAS,CAAEtB,MAAOiB,EAAMM,OAAOvB,SAmB9BwB,GAAG,oBACHL,UAAU,2BAETT,EAAQe,IAAI,SAACC,EAAQC,GAAT,OACXd,EAAAC,EAAAC,cAAA,UACEa,IAAKC,KAAKC,SACV9B,MAAO2B,EAAI,GAEVA,EAAI,MAIXd,EAAAC,EAAAC,cAAA,SACEgB,KAAK,SACL/B,MAAM,SACNmB,UAAU,qDA5CDa,IAAMC,WA0D3BnC,EAAOoC,aAAe,CACpB/B,cAAe,EACfI,SAAU,yBACVC,eAAgB,wBAChBC,gBAAiB,yBAEJX,QChETqC,6MACJpC,MAAQ,CAAEqC,SAAS,2EAEV,IAAAhC,EAAAC,KAAAC,EAKHD,KAAKH,MAHPmC,EAFK/B,EAEL+B,qBAAsBC,EAFjBhC,EAEiBgC,YAAaC,EAF9BjC,EAE8BiC,eAAgBC,EAF9ClC,EAE8CkC,eACnDC,EAHKnC,EAGLmC,kBAAmBC,EAHdpC,EAGcoC,mBAAoBC,EAHlCrC,EAGkCqC,UACvCC,EAJKtC,EAILsC,eAAgBnC,EAJXH,EAIWG,gBAGV2B,EAAY/B,KAAKN,MAAjBqC,QAKR,OACEvB,EAAAC,EAAAC,cAAAF,EAAAC,EAAA+B,SAAA,KACEhC,EAAAC,EAAAC,cAAA,UACEI,WAAuB,IAAZiB,EACP,SACA,2CAEJL,KAAK,SACLe,QAAS,WACPP,IAZNnC,EAAKkB,SAAS,iBAAO,CAAEc,SAAUA,OAK/B,SAaAvB,EAAAC,EAAAC,cAAA,WAASI,WAAuB,IAAZiB,EAAmB,SAAW,WAChDvB,EAAAC,EAAAC,cAACgC,EAAD,CACExC,SAAUoC,EACVxC,cAAeyC,EACfpC,eAAgB6B,EAChB5B,gBAAiBA,IAEnBI,EAAAC,EAAAC,cAAA,UACEgB,KAAK,SACLZ,UAAU,kBACV2B,QAASN,GAHX,WAOA3B,EAAAC,EAAAC,cAAA,UACEgB,KAAK,SACLZ,UAAU,kBACV2B,QAASL,GAHX,oBAOA5B,EAAAC,EAAAC,cAAA,UACEgB,KAAK,SACLZ,UAAU,kBACV2B,QAASJ,GAHX,2BAOA7B,EAAAC,EAAAC,cAAA,UACEgB,KAAK,SACLZ,UAAU,kBACV2B,QAASR,GAHX,kBA1DYN,IAAMC,WAkF5BE,EAAQD,aAAe,CACrBU,eAAgB,EAChBD,UAAW,0BACXL,YAAa,wBACbC,eAAgB,wBAChBC,eAAgB,wBAChBC,kBAAmB,wBACnBC,mBAAoB,wBACpBL,qBAAsB,wBACtB5B,gBAAiB,yBAEJ0B,QC5FTa,6MACJjD,MAAQ,CACNqC,SAAS,EACTa,MAAMC,OAAAC,EAAA,EAAAD,CAAKjD,EAAKC,MAAM+C,OACtBG,iBAAkBvB,KAAKwB,IAALC,MAAAzB,KAAIqB,OAAAC,EAAA,EAAAD,CAAQjD,EAAKC,MAAM+C,MAAMxB,IAAI,SAAA8B,GAAI,OAAIA,EAAKC,WAChEC,kBAAmB,KAGrBC,YAAc,WACZzD,EAAKqB,SAAS,SAAAqC,GAAS,MAAK,CAAEvB,SAAUuB,EAAUvB,cAGpDwB,eAAiB,WACf3D,EAAKqB,SAAS,SAAAqC,GAAS,MAAK,CAAEV,MAAOC,OAAAC,EAAA,EAAAD,CAAIS,EAAUV,OAAOY,gBAG5DC,iBAAmB,WACjB7D,EAAKqB,SAAS,SAAAqC,GAAS,MAAK,CAAEV,MAAOU,EAAUV,MAAMc,aAGvDC,aAAe,WACb/D,EAAKqB,SAAS,CAAE2B,MAAMC,OAAAC,EAAA,EAAAD,CAAKjD,EAAKC,MAAM+C,YAGxCgB,kBAAoB,WAClBhE,EAAKqB,SAAS,SAAAqC,GAAS,MAAK,CAC1BV,MAAOU,EAAUV,MACdc,KAAK,SAACjD,EAAGoD,GAAJ,OAAWpD,EAAE0C,OAASU,EAAEV,eAIpCW,oBAAsB,WACpBlE,EAAKqB,SAAS,SAAAqC,GAAS,MAAK,CAC1BV,MAAOU,EAAUV,MACdmB,OAAO,SAAAb,GAAI,OAAIA,EAAKC,QAAUG,EAAUf,uBAI/CyB,iBAAmB,SAACrE,GAClBC,EAAKqB,SAAS,CAAEsB,eAAgB5C,6EAGzB,IAAAsE,EACkDjE,KAAKN,MAAtDqC,EADDkC,EACClC,QAASgB,EADVkB,EACUlB,iBAAkBK,EAD5Ba,EAC4Bb,kBAEnC,OACE5C,EAAAC,EAAAC,cAAAF,EAAAC,EAAA+B,SAAA,KACEhC,EAAAC,EAAAC,cAACwD,EAAD,CACEhC,eAAgBlC,KAAKqD,YACrBlB,eAAgBnC,KAAKuD,eACrBnB,kBAAmBpC,KAAKyD,iBACxBxB,YAAajC,KAAK2D,aAClBtB,mBAAoBrC,KAAK4D,kBACzB5B,qBAAsBhC,KAAK8D,oBAC3B1D,gBAAiBJ,KAAKgE,iBACtB1B,UAAWS,EACXR,eAAgBa,IAElB5C,EAAAC,EAAAC,cAAA,MAAII,WAAuB,IAAZiB,EAAoB,SAAW,cAC3C/B,KAAKN,MAAMkD,MAAMxB,IAAI,SAAA8B,GAAI,OACxB1C,EAAAC,EAAAC,cAAA,MAAIa,IAAKC,KAAKC,SAAUX,UAAU,oBAAoBoC,cA5D1CvB,IAAMC,WAqE9Be,EAAUd,aAAe,CAAEe,MAAO,IACnBD,QCvETwB,SAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,WASaC,EANH,kBACV5D,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACbN,EAAAC,EAAAC,cAAC2D,EAAD,CAAWzB,MAAOuB,MCdtBG,IAASC,OAAO/D,EAAAC,EAAAC,cAAC8D,EAAD,CAAKC,KAAM,MAASC,SAASC,eAAe","file":"static/js/main.53182ecc.chunk.js","sourcesContent":["/* eslint-disable react/prefer-stateless-function */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Select extends React.Component {\n  state = { value: this.props.selectedValue }\n\n  render() {\n    const { maxValue, filteredLength, OnItemMinLength } = this.props;\n\n    const options = Array(maxValue).fill('');\n    const { value } = this.state;\n\n    const handleChange = (event) => {\n      this.setState({ value: event.target.value });\n    };\n\n    const handleSubmit = (event) => {\n      OnItemMinLength(value);\n      filteredLength();\n      event.preventDefault();\n    };\n\n    return (\n      <form\n        onSubmit={handleSubmit}\n        className=\"buttons__button\"\n      >\n        <label htmlFor=\"min-length-select\">\n        Choose min length of words:\n          <select\n            value={value}\n            onChange={handleChange}\n            id=\"min-length-select\"\n            className=\"buttons__button--select\"\n          >\n            {options.map((option, i) => (\n              <option\n                key={Math.random()}\n                value={i + 1}\n              >\n                {i + 1}\n              </option>\n            ))}\n          </select>\n          <input\n            type=\"submit\"\n            value=\"Submit\"\n            className=\"buttons__button buttons__button--submit\"\n          />\n        </label>\n      </form>\n    );\n  }\n}\n\nSelect.propTypes = {\n  selectedValue: PropTypes.number,\n  maxValue: PropTypes.number,\n  filteredLength: PropTypes.func,\n  OnItemMinLength: PropTypes.func,\n};\nSelect.defaultProps = {\n  selectedValue: 1,\n  maxValue: 'Max value is undefined',\n  filteredLength: 'Function is undefined',\n  OnItemMinLength: 'Function is undefined',\n};\nexport default Select;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Select from './Select';\n\nclass Buttons extends React.Component {\n  state = { isShown: true };\n\n  render() {\n    const {\n      OnItemfilteredLength, onItemReset, onItemSelected, onItemReversed,\n      onItemSortedAlpha, onItemSortedLength, maxLength,\n      selectedLength, OnItemMinLength,\n    } = this.props;\n\n    const { isShown } = this.state;\n    const showHandler = () => {\n      this.setState(() => ({ isShown: !isShown }));\n    };\n\n    return (\n      <>\n        <button\n          className={isShown === false\n            ? 'hidden'\n            : 'buttons__button buttons__button--initial'\n          }\n          type=\"button\"\n          onClick={() => {\n            onItemSelected();\n            showHandler();\n          }}\n        >\n        Start\n        </button>\n        <section className={isShown === true ? 'hidden' : 'buttons'}>\n          <Select\n            maxValue={maxLength}\n            selectedValue={selectedLength}\n            filteredLength={OnItemfilteredLength}\n            OnItemMinLength={OnItemMinLength}\n          />\n          <button\n            type=\"button\"\n            className=\"buttons__button\"\n            onClick={onItemReversed}\n          >\n            Reverse\n          </button>\n          <button\n            type=\"button\"\n            className=\"buttons__button\"\n            onClick={onItemSortedAlpha}\n          >\n            Sort by alphabet\n          </button>\n          <button\n            type=\"button\"\n            className=\"buttons__button\"\n            onClick={onItemSortedLength}\n          >\n            Sort by length of words\n          </button>\n          <button\n            type=\"button\"\n            className=\"buttons__button\"\n            onClick={onItemReset}\n          >\n            Reset\n          </button>\n        </section>\n      </>\n    );\n  }\n}\n\nButtons.propTypes = {\n  selectedLength: PropTypes.number,\n  maxLength: PropTypes.number,\n  onItemReset: PropTypes.func,\n  onItemSelected: PropTypes.func,\n  onItemReversed: PropTypes.func,\n  onItemSortedAlpha: PropTypes.func,\n  onItemSortedLength: PropTypes.func,\n  OnItemfilteredLength: PropTypes.func,\n  OnItemMinLength: PropTypes.func,\n};\nButtons.defaultProps = {\n  selectedLength: 1,\n  maxLength: 'Max length is undefined',\n  onItemReset: 'Function is undefined',\n  onItemSelected: 'Function is undefined',\n  onItemReversed: 'Function is undefined',\n  onItemSortedAlpha: 'Function is undefined',\n  onItemSortedLength: 'Function is undefined',\n  OnItemfilteredLength: 'Function is undefined',\n  OnItemMinLength: 'Function is undefined',\n};\nexport default Buttons;\n","/* eslint-disable react/prefer-stateless-function */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Buttons from './Buttons';\n\nclass GoodsList extends React.Component {\n  state = {\n    isShown: false,\n    goods: [...this.props.goods],\n    maxLegnthOfGoods: Math.max(...this.props.goods.map(good => good.length)),\n    selectedMinLength: 1,\n  };\n\n  showHandler = () => {\n    this.setState(prevState => ({ isShown: !prevState.isShown }));\n  };\n\n  reverseHandler = () => {\n    this.setState(prevState => ({ goods: [...prevState.goods].reverse() }));\n  };\n\n  sortAlphaHandler = () => {\n    this.setState(prevState => ({ goods: prevState.goods.sort() }));\n  };\n\n  resetHandler = () => {\n    this.setState({ goods: [...this.props.goods] });\n  };\n\n  sortLengthHandler = () => {\n    this.setState(prevState => ({\n      goods: prevState.goods\n        .sort((a, b) => (a.length - b.length)),\n    }));\n  };\n\n  filterLengthHandler = () => {\n    this.setState(prevState => ({\n      goods: prevState.goods\n        .filter(good => good.length >= prevState.selectedLength),\n    }));\n  };\n\n  minLengthHandler = (value) => {\n    this.setState({ selectedLength: value });\n  };\n\n  render() {\n    const { isShown, maxLegnthOfGoods, selectedMinLength } = this.state;\n\n    return (\n      <>\n        <Buttons\n          onItemSelected={this.showHandler}\n          onItemReversed={this.reverseHandler}\n          onItemSortedAlpha={this.sortAlphaHandler}\n          onItemReset={this.resetHandler}\n          onItemSortedLength={this.sortLengthHandler}\n          OnItemfilteredLength={this.filterLengthHandler}\n          OnItemMinLength={this.minLengthHandler}\n          maxLength={maxLegnthOfGoods}\n          selectedLength={selectedMinLength}\n        />\n        <ul className={isShown === false ? 'hidden' : 'goods-list'}>\n          {this.state.goods.map(good => (\n            <li key={Math.random()} className=\"goods-list__good\">{good}</li>\n          ))}\n        </ul>\n      </>\n    );\n  }\n}\n\nGoodsList.propTypes = { goods: PropTypes.arrayOf(PropTypes.string) };\nGoodsList.defaultProps = { goods: [] };\nexport default GoodsList;\n","import React from 'react';\nimport GoodsList from './GoodsList';\nimport './Styles/Main.scss';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst App = () => (\n  <div className=\"good-list\">\n    <GoodsList goods={goodsFromServer} />\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App test={123} />, document.getElementById('root'));\n"],"sourceRoot":""}